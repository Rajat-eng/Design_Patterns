LSP states that a subclass should enhance the base classâ€™s behavior but not alter it in unexpected ways. It ensures that a subclass can stand in for a superclass and function correctly.

public class Rectangle {
    private int width;
    private int height;

    public void setWidth(int width) {
        this.width = width;
    }

    public void setHeight(int height) {
        this.height = height;
    }

    public int getArea() {
        return width * height;
    }
}

public class Square extends Rectangle {
    @Override
    public void setWidth(int width) {
        super.setWidth(width);
        super.setHeight(width);  // Violates LSP by overriding expected behavior
    }

    @Override
    public void setHeight(int height) {
        super.setWidth(height);
        super.setHeight(height);  // Violates LSP by overriding expected behavior
    }
}